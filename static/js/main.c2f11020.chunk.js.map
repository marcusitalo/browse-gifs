{"version":3,"sources":["components/Header/index.js","components/CardGif/index.js","components/Tenor/index.js","App.js","index.js"],"names":["Header","title","className","CardGif","url","Card","CardImg","top","width","src","alt","Button","onClick","navigator","clipboard","writeText","Tenor","props","state","error","isLoaded","word","gifs","handleChange","bind","event","myValue","target","value","console","log","this","setState","componentDidMount","fetch","then","res","json","result","results","message","InputGroup","size","InputGroupAddon","addonType","Input","onChange","Row","map","gif","index","key","media","tinygif","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAQeA,G,WANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACX,gCACI,wBAAIC,UAAU,eAAd,OAA6BD,QAA7B,IAA6BA,IAAS,yB,+DCc/BE,EAdC,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAF,OACZ,yBAAKF,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACf,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKL,EAAKM,IAAI,aAAaR,UAAU,cAGvE,yBAAKA,UAAU,kBACX,kBAACS,EAAA,EAAD,CAAQC,QAAS,WAAOC,UAAUC,UAAUC,UAAUX,KAAtD,gB,gCC0DGY,G,wDAhEX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,KAAO,GACPC,KAAM,IAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARH,E,yDAWNC,GACT,IAAMC,EAAUD,EAAME,OAAOC,MAC7BC,QAAQC,IAAIJ,GACZK,KAAKC,SAAS,CACVX,KAAMK,IAEVK,KAAKE,sB,0CAGY,IAAD,OAClBC,MAAM,oCAAoCH,KAAKb,MAAMG,MAClDc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKN,SAAS,CACZZ,UAAU,EACVE,KAAMgB,EAAOC,aAGjB,SAACpB,GACC,EAAKa,SAAS,CACZZ,UAAU,EACVD,e,+BAMA,IAAD,EAC2BY,KAAKb,MAA/BC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUE,EADlB,EACkBA,KACzB,OAAIH,EACK,uCAAaA,EAAMqB,SAChBpB,EAIN,kBAAC,WAAD,KACI,kBAACqB,EAAA,EAAD,CAAYC,KAAK,MACb,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WAA3B,UACA,kBAACC,EAAA,EAAD,CAAOC,SAAUf,KAAKR,gBAE1B,kBAACwB,EAAA,EAAD,KACKzB,EAAK0B,KAAI,SAACC,EAAKC,GAAN,OACV,kBAAC,EAAD,CAASC,IAAKD,EAAO9C,IAAK6C,EAAIG,MAAM,GAAGC,QAAQjD,WAVpD,+C,GA7CKkD,IAAMC,Y,MCQXC,MATf,WACE,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,CAAQD,MAAM,gBACd,kBAAC,EAAD,QCHNwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c2f11020.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../index.css';\r\nconst Header = ({title}) =>(\r\n    <header>\r\n        <h1 className='titleHeader'>{title ?? 'Escolha um Titulo.'}</h1>       \r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Card, CardImg, Button  } from 'reactstrap';\r\nimport '../../index.css';\r\n\r\nconst CardGif = ({url}) =>(    \r\n    <div className=\"flip-card\">\r\n        <div className=\"flip-card-inner\">\r\n            <div className=\"flip-card-front\">\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={url} alt=\"Meme Image\" className='imgCard'/>\r\n            </Card>\r\n            </div>\r\n        <div className=\"flip-card-back\">\r\n            <Button onClick={() => {navigator.clipboard.writeText(url)}} >COPY URL</Button>            \r\n        </div>\r\n    </div>\r\n    </div>    \r\n);    \r\nexport default CardGif;","import React, { Fragment } from 'react';\r\nimport CardGif from '../CardGif';\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport { Row  } from 'reactstrap';\r\nimport '../../assets/css/flip-card.css'\r\n\r\nclass Tenor extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        word : \"\",\r\n        gifs: []\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const myValue = event.target.value;\r\n        console.log(myValue);\r\n        this.setState({\r\n            word: myValue\r\n        })\r\n        this.componentDidMount();\r\n      }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"http://api.tenor.com/v1/search?q=\"+this.state.word)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              gifs: result.results\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, gifs } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n            <Fragment>\r\n                <InputGroup size=\"sm\">\r\n                    <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\r\n                    <Input onChange={this.handleChange}/>\r\n                </InputGroup>\r\n                <Row>\r\n                    {gifs.map((gif, index) => (\r\n                    <CardGif key={index} url={gif.media[0].tinygif.url}/>\r\n                    ))}\r\n                </Row>  \r\n            </Fragment>          \r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\nexport default Tenor;","import React from 'react';\nimport Header from './components/Header';\nimport Tenor from './components/Tenor';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Browse Gifs\"/>\n      <Tenor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}